name: Release

on:
  # Trigger the workflow on the new 'v*' tag created
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_artifact:
    needs: [create_release]
    name: ${{ matrix.os }}/GHC ${{ matrix.ghc }}/${{ github.ref }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        stack: ["2.7.5"]
        ghc: ["8.10.7"]
        resolver: [lts-18.19]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set env
        run: |
          echo "tag_name=${{ github.ref }}" >> $GITHUB_ENV
          if [[ ${{ runner.os }} == Linux ]]; then
            echo "os_name=linux" >> $GITHUB_ENV
          else
            echo "os_name=darwin" >> $GITHUB_ENV
          fi

      - uses: haskell/actions/setup@v2
        name: Setup Haskell Stack
        with:
          ghc-version: ${{ matrix.ghc }}
          stack-version: ${{ matrix.stack }}

      - uses: actions/cache@v2.1.3
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ matrix.ghc }}-stack

      - name: Initalize stack for LTS
        run: |
          stack update
          stack init --resolver ${{ matrix.resolver }} --force

      - name: Install dependencies
        run: |
          stack --resolver ${{ matrix.resolver }} build --no-run-tests --no-run-benchmarks --only-dependencies

      - name: Build
        run: |
          stack --resolver ${{ matrix.resolver }} build --no-run-tests --no-run-benchmarks --copy-bins --local-bin-path ./bin

      - name: Compress binary
        uses: svenstaro/upx-action@2.0.1
        with:
          file: ./bin/pig

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo "::set-output name=upload_url::$(cat release_url/release_url.txt)"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./bin/pig
          asset_name: pig-${{ env.tag_name }}-${{ env.os_name }}-amd64
          asset_content_type: application/octet-stream
